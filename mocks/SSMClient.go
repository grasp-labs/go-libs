// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	ssm "github.com/aws/aws-sdk-go-v2/service/ssm"
)

// SSMClient is an autogenerated mock type for the SSMClient type
type SSMClient struct {
	mock.Mock
}

type SSMClient_Expecter struct {
	mock *mock.Mock
}

func (_m *SSMClient) EXPECT() *SSMClient_Expecter {
	return &SSMClient_Expecter{mock: &_m.Mock}
}

// GetParameter provides a mock function with given fields: c, name, withDecryption
func (_m *SSMClient) GetParameter(c context.Context, name string, withDecryption bool) (*ssm.GetParameterOutput, error) {
	ret := _m.Called(c, name, withDecryption)

	if len(ret) == 0 {
		panic("no return value specified for GetParameter")
	}

	var r0 *ssm.GetParameterOutput
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string, bool) (*ssm.GetParameterOutput, error)); ok {
		return rf(c, name, withDecryption)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string, bool) *ssm.GetParameterOutput); ok {
		r0 = rf(c, name, withDecryption)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ssm.GetParameterOutput)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string, bool) error); ok {
		r1 = rf(c, name, withDecryption)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SSMClient_GetParameter_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetParameter'
type SSMClient_GetParameter_Call struct {
	*mock.Call
}

// GetParameter is a helper method to define mock.On call
//   - c context.Context
//   - name string
//   - withDecryption bool
func (_e *SSMClient_Expecter) GetParameter(c interface{}, name interface{}, withDecryption interface{}) *SSMClient_GetParameter_Call {
	return &SSMClient_GetParameter_Call{Call: _e.mock.On("GetParameter", c, name, withDecryption)}
}

func (_c *SSMClient_GetParameter_Call) Run(run func(c context.Context, name string, withDecryption bool)) *SSMClient_GetParameter_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string), args[2].(bool))
	})
	return _c
}

func (_c *SSMClient_GetParameter_Call) Return(_a0 *ssm.GetParameterOutput, _a1 error) *SSMClient_GetParameter_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *SSMClient_GetParameter_Call) RunAndReturn(run func(context.Context, string, bool) (*ssm.GetParameterOutput, error)) *SSMClient_GetParameter_Call {
	_c.Call.Return(run)
	return _c
}

// NewSSMClient creates a new instance of SSMClient. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSSMClient(t interface {
	mock.TestingT
	Cleanup(func())
}) *SSMClient {
	mock := &SSMClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
